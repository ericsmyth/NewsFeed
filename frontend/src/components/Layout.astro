---
interface Props {
  title: string;
}

const { title } = Astro.props;
import '../styles/global.css';
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script>
      // Initialize theme
      function initTheme() {
        const theme = localStorage.getItem('theme') || 'light';
        const root = document.documentElement;
        root.classList.remove('light', 'dark');
        root.classList.add(theme);
      }

      // Listen for system theme changes only if explicitly set to system
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        const theme = localStorage.getItem('theme');
        if (theme === 'system') {
          const root = document.documentElement;
          root.classList.remove('light', 'dark');
          root.classList.add(e.matches ? 'dark' : 'light');
        }
      });

      // Apply theme when page loads
      document.addEventListener('DOMContentLoaded', initTheme);
      // Also check immediately in case DOMContentLoaded has already fired
      initTheme();
    </script>
  </head>
  <body class="bg-white dark:bg-gray-900 text-gray-800 dark:text-gray-100 font-sans">
    <header class="bg-white dark:bg-gray-800 shadow-sm py-4">
      <nav class="max-w-7xl mx-auto px-4 flex justify-between items-center">
        <a href="/" class="text-xl font-bold text-primary no-underline">NewsFeed</a>
        <div class="flex gap-4" id="navButtons">
          <a href="/login" class="text-gray-800 dark:text-gray-200 no-underline px-4 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors auth-show">Login</a>
          <a href="/register" class="text-gray-800 dark:text-gray-200 no-underline px-4 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors auth-show">Register</a>
          <button id="logoutBtn" class="text-gray-800 dark:text-gray-200 no-underline px-4 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors auth-hide">Logout</button>
        </div>
      </nav>
    </header>
    <main class="max-w-7xl mx-auto px-4 my-8 min-h-[calc(100vh-200px)]">
      <slot />
    </main>
    <footer class="text-center py-8 bg-gray-100 dark:bg-gray-800 mt-8">
      <p class="text-gray-800 dark:text-gray-200">&copy; 2025 NewsFeed. All rights reserved.</p>
    </footer>
  </body>
</html>

<script>
  // Check if user is logged in using local storage
  function checkAuthStatus() {
    try {
      const authData = localStorage.getItem('auth');
      const isLoggedIn = !!authData;
      
      // Get all auth-show elements (login/register links)
      const authShowElements = document.querySelectorAll('.auth-show');
      // Get all auth-hide elements (logout button)
      const authHideElements = document.querySelectorAll('.auth-hide');
      
      if (isLoggedIn) {
        authShowElements.forEach(el => (el as HTMLElement).style.display = 'none');
        authHideElements.forEach(el => (el as HTMLElement).style.display = 'inline-block');
      } else {
        authShowElements.forEach(el => (el as HTMLElement).style.display = 'inline-block');
        authHideElements.forEach(el => (el as HTMLElement).style.display = 'none');
      }
    } catch (error) {
      console.error('Error checking auth status:', error);
    }
  }

  // Handle logout
  const logoutBtn = document.getElementById('logoutBtn');
  if (logoutBtn) {
    logoutBtn.addEventListener('click', () => {
      try {
        localStorage.removeItem('auth');
        window.location.href = '/';
      } catch (error) {
        console.error('Error logging out:', error);
      }
    });
  }

  // Check auth status when page loads
  document.addEventListener('DOMContentLoaded', checkAuthStatus);
  // Also check immediately in case DOMContentLoaded has already fired
  checkAuthStatus();
</script>

<style>
  .auth-hide {
    display: none;
  }
  
  #logoutBtn {
    background: none;
    border: none;
    cursor: pointer;
    font: inherit;
  }
</style> 